- Explain the order of execution in terms of the event loop for eventloop/immediate.js.

Firsly the readFile() operation would be started on the poll phase on a worker thread. 
Once, fileRead is completed, the callback in pending_callback phase would be executed. 
It will put callback to setTimeOut to the timers phase. 
And then it will put setImmediate to check phase. 
After 5 ms setTimeOut would now be in pending_callback phase. 
As check has more priority than pending_callback it would be executed and 'I was scheduled to run immediately' would be logged on to the console. 
Then setTimeOut would be executed and '6ms have passed since I was scheduled' would be logged to the console. 

- Will the order of execution change if timeout is changed to 0? Why or why not?

The order of execution would not change. This is because even if setTimeOut is executed in 0ms still it would be initially in the timers phase
and then to the pending_callback phase. But still, check phase would have a higher priority and it would be executed earlier thanÂ setTimeOut.